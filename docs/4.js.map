{"version":3,"sources":["webpack:///./src/slides/dmx512-fixture.js","webpack:///./src/components/dmxChannels.js"],"names":["Slide","HalfVertical","A","B","notes","key","uuid","background","mixin","Data","luminave","channels","width","height","order","css","label","className","DmxChannels","styled","div","StyledChannel","StyledLabel","Info","StyledValue","Channel","props","value","children"],"mappings":"0uBAiBOA,EAAeC,IAAfD,MAAOE,EAAQD,IAARC,EAAGC,EAAKF,IAALE,EAEXC,EACJ,kBAAC,IAAD,KACE,uCACA,2FACA,+IAIA,0HAIA,uGAOF,4BAACJ,EAAD,CACEK,IAAKC,MACLC,WAAU,4BACVC,MAAM,wBACN,kBAAC,UAAQC,KAAT,CAAcC,SAAU,CAAC,MACxBN,EAED,kBAACF,EAAD,KACE,kBAAC,QAAD,wBACA,6BACA,6BACA,6BACA,6BACA,8BAGF,kBAACC,EAAD,KACE,kBAAC,IAAD,CAAaQ,SAAS,IAAIC,MAAM,MAAMC,OAAO,QAC3C,kBAAC,IAAD,CACEC,MAAO,EACPN,MAAOO,cAAF,MAGL,kBAAC,IAAD,CAASR,WAAW,OAAOS,MAAM,QAEjC,kBAAC,IAAD,CAAST,WAAW,OAAOS,MAAM,UAEjC,kBAAC,IAAD,CAAST,WAAW,OAAOS,MAAM,UAGnC,kBAAC,IAAD,CACEF,MAAO,EACPN,MAAOO,cAAF,MAGL,kBAAC,IAAD,CAASR,WAAW,UAAUS,MAAM,KAAKC,UAAU,MACjD,kBAAC,IAAD,sBAIJ,kBAAC,IAAD,CACEH,MAAO,EACPN,MAAOO,cAAF,MAGL,kBAAC,IAAD,CAASR,WAAW,OAAOS,MAAM,UAC/B,kBAAC,IAAD,qBAIJ,kBAAC,IAAD,CACEF,MAAO,EACPN,MAAOO,cAAF,MAGL,kBAAC,IAAD,CAASR,WAAW,GAAGS,MAAM,SAASC,UAAU,gB,+iEC1FnD,IAAMC,EAAcC,UAAOC,IAAV,KAEN,qBAAET,YACL,qBAAEC,SACD,qBAAEC,UAWLQ,EAAgBF,UAAOC,IAAV,KACN,qBAAEb,cAyDTe,EAAcH,UAAOC,IAAV,KACJ,qBAAEb,cAUTgB,EAAOJ,UAAOC,IAAV,KAKXI,EAAcL,UAAOC,IAAV,KAIJK,EAAU,SAAAC,GAAS,IAEpBC,EAAiBD,EAAjBC,MAAOX,EAAUU,EAAVV,MAEf,OACE,kBAACK,EAAkBK,EACjB,kBAACJ,EAAgBI,EAAQV,GACxBU,EAAME,SACP,kBAACJ,EAAD,KAAcG","file":"4.js","sourcesContent":["import Config from './config'\nimport React from 'react'\nimport uuid from 'uuid/v4'\nimport Fragment from '@dekk/fragment'\nimport {Text, Title, Subtitle, Uppercase, Bold, Center, Code} from '@dekk/text'\nimport {default as MaskedImage, FitImage} from '@dekk/image'\nimport Notes from '@dekk/speaker-notes'\nimport {Main} from '@dekk/master-slides'\nimport {Plugins} from '@dekk/deck'\nimport {RainbowText} from '../components'\nimport {ImportantLink} from '../components/links'\nimport {DmxChannels, Channel, Info} from '../components/dmxChannels'\nimport {topCenter} from '../components/images'\nimport {css} from 'styled-components'\nimport {Grid, Half, HalfVertical} from '../masters'\n\n// const {Slide, A} = Main\nconst {Slide, A, B} = HalfVertical\n\nconst notes = (\n  <Notes>\n    <h3>Fixture</h3>\n    <p>In the DMX512 world you don't say light, but call it fixture</p>\n    <p>\n      One of the most basic and cheapest fixtures is a LED Flat PAR like you can\n      see in this picture and here on stage\n    </p>\n    <p>\n      A fixture usually has 1 or more functions. Each of these functions can be\n      used individually\n    </p>\n    <p>\n      This fixture has 6 function, the first ist to display Red, Green & Blue\n    </p>\n  </Notes>\n)\n\nexport default (\n  <Slide\n    key={uuid()}\n    background={`url(\"media/flat_par.jpg\")`}\n    mixin=\"--slide-color: white\">\n    <Plugins.Data luminave={['']} />\n    {notes}\n\n    <A>\n      <Title>Light (Fixture)</Title>\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n    </A>\n\n    <B>\n      <DmxChannels channels=\"6\" width=\"90%\" height=\"10em\">\n        <Fragment\n          order={1}\n          mixin={css`\n            display: contents !important;\n          `}>\n          <Channel background=\"#f00\" label=\"Red\"></Channel>\n\n          <Channel background=\"#0f0\" label=\"Green\"></Channel>\n\n          <Channel background=\"#00f\" label=\"Blue\"></Channel>\n        </Fragment>\n\n        <Fragment\n          order={2}\n          mixin={css`\n            display: contents !important;\n          `}>\n          <Channel background=\"#5b1ccf\" label=\"UV\" className=\"uv\">\n            <Info>Ultraviolet</Info>\n          </Channel>\n        </Fragment>\n\n        <Fragment\n          order={3}\n          mixin={css`\n            display: contents !important;\n          `}>\n          <Channel background=\"#fff\" label=\"Dimmer\">\n            <Info>Brightness</Info>\n          </Channel>\n        </Fragment>\n\n        <Fragment\n          order={4}\n          mixin={css`\n            display: contents !important;\n          `}>\n          <Channel background=\"\" label=\"Strobe\" className=\"strobe\"></Channel>\n        </Fragment>\n      </DmxChannels>\n    </B>\n  </Slide>\n)\n","import React from 'react'\nimport styled, {css} from 'styled-components'\n\nexport const DmxChannels = styled.div`\n\n    --channels: ${({channels}) => channels};\n    --width: ${({width}) => width};\n    --height: ${({height}) => height};\n\n    width: var(--width, 100%);\n    height: var(--height, 50%);\n    display: grid;\n    grid-template-columns: repeat(var(--channels), 1fr);\n    column-gap: 1em;\n    justify-items: center;\n    counter-reset: number;\n`\n\nexport const StyledChannel = styled.div`\n    --background: ${({background}) => background};\n\n    background: var(--background, #fff);\n    color: #000;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    align-content: center;\n    position: relative;\n    padding: .25em;\n    \n    :before {\n        counter-increment: number;\n        content: counter(number);\n        position: absolute;\n        display: block;\n        left: 0;\n        bottom: 0;\n        padding: 0.25em;\n\n        width: 35px;\n        height: 35px;\n        background: #fff;\n        text-align: center;\n    }\n\n    &.strobe {\n        animation: strobe 500ms steps(1, end) infinite;\n\n        @keyframes strobe {\n          74% {\n            background: white;\n          }\n          75% {\n            background: black;\n          }\n        }\n    }\n\n    &.uv {\n        box-shadow: 0 0 20px #5b1ccf;\n    }\n\n    &.active {\n        box-shadow: 0 0 0.5em rgba(0, 0, 0, .75);\n        filter: zoom(100%);\n    }\n\n    &.inactive {\n        filter: blur(5px) invert(100%);\n        transform: scale(0.75);\n\n    }\n`\n\nexport const StyledLabel = styled.div`\n    --background: ${({background}) => background};\n\n    background: #fff;\n    width: 100%;\n    text-align: center;\n\n    font-weight: bold;\n    font-size: 2em;\n`\n\nexport const Info = styled.div`\n    margin: 1em 0 0 0;\n    font-size: 0.85em;\n`\n\nconst StyledValue = styled.div`\n    font-size: 3em;\n`\n\nexport const Channel = props => {\n\n    const { value, label } = props\n\n    return (\n      <StyledChannel {...props}>\n        <StyledLabel {...props}>{label}</StyledLabel>\n        {props.children}\n        <StyledValue>{value}</StyledValue>\n      </StyledChannel>\n    )\n}"],"sourceRoot":""}