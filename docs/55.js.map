{"version":3,"sources":["webpack:///./src/slides/tims-stack-diagram.js","webpack:///./src/components/list.js"],"names":["Slide","Main","A","notes","key","uuid","Data","luminave","src","alt","StyledList","styled","ul","StyledOrderedListLarge","ol"],"mappings":"2FAAA,gJAiCOA,GAjCP,aAiCmBC,OAAZD,OAAOE,EAAKD,OAALC,EAGRC,EACJ,kBAAC,IAAD,KACE,mDACA,4BACE,yRAMA,0OAKA,uNAMA,mNAKA,iSAMA,kNAKA,4LAiBJ,4BAACH,EAAD,CAAOI,IAAKC,OACV,kBAAC,UAAQC,KAAT,CAAcC,SAAU,CAAC,MACxBJ,EAED,kBAACD,EAAD,KACE,kBAAC,IAAD,CACEM,IAAI,kCACJC,IAAI,6B,ohFC9FL,IAAMC,EAAaC,UAAOC,GAAV,KAqGVC,GAtCkBF,UAAOC,GAAV,KAsCUD,UAAOG,GAAV","file":"55.js","sourcesContent":["import Config from './config'\nimport React from 'react'\nimport uuid from 'uuid/v4'\nimport Fragment, {Sequence} from '@dekk/fragment'\nimport {Text, Title, Subtitle, Uppercase, Bold, Center, Code} from '@dekk/text'\nimport {default as MaskedImage, FitImage} from '@dekk/image'\nimport Notes from '@dekk/speaker-notes'\nimport {Main} from '@dekk/master-slides'\nimport {Plugins} from '@dekk/deck'\nimport {\n  RainbowText,\n  TextMarker,\n  Code2,\n  YouTube,\n  SuperVideo,\n  StyledFooter\n} from '../components'\nimport {css} from 'styled-components'\nimport {Grid, Half, HalfVertical} from '../masters'\nimport {ImportantLink} from '../components/links'\nimport {\n  topCenter,\n  LargeImage,\n  MediumImage,\n  SmallImage\n} from '../components/images'\nimport {fade, flip, cube} from '@dekk/animation'\nimport {\n  StyledListLarge,\n  StyledList,\n  StyledOrderedListLarge\n} from '../components/list'\n\nconst {Slide, A} = Main\n// const {Slide, A, B} = Half\n\nconst notes = (\n  <Notes>\n    <h3>Tims Stack: Diagram</h3>\n    <ul>\n      <li>\n        First of all we take a look at the computer that I'm using to run both\n        luminave (lights) and modV (visuals). It must be a powerful machine to\n        be able to use both applications at the same time and ensure that we\n        always have 60 fps for smooth visuals.\n      </li>\n      <li>\n        Attachted over USB is an Audio Interface that gets the audio signal\n        directly from Jan. The signal is then used in modV to generate visuals\n        that are in sync with the music because of live audio analysis.\n      </li>\n      <li>\n        The visuals are then reduced in modV to only get a few colors out of\n        them. Those colors are send over WebSocket to luminave, where luminave\n        can use that information to control lights.\n      </li>\n\n      <li>\n        luminave knows which lights exist and you can map the different colors\n        that modV is providing to different lights. So whenever modV is giving\n        us data, the lights are also updated.\n      </li>\n      <li>\n        The lights get their data from the WebUSB DMX512 controller (which you\n        can build yourself using an article that I wrote) which is working\n        directly in the browser by leveraging WebUSB. It can transform the\n        colors into DMX512 so that the lights understand it.\n      </li>\n      <li>\n        Another consumer of the modV colors are these cyberpunk goggles. They\n        contain a LED ring from Adafruit called NeoPixel and are updated over\n        WiFi, also with a WebSocket connetion.\n      </li>\n      <li>\n        In order to not use the UI of the software, there is also a MIDI\n        controller in use that can control both luminave and modV at the same\n        time using WebMIDI.\n      </li>\n    </ul>\n  </Notes>\n)\n\n/*\n        background={`url(\"media/dmx512_universe.jpg\")`}\n        background=\"#fff\"\n        mixin=\"--slide-color: black\" \n        animationOut={flip.y} \n        animationIn={flip.y}\n*/\nexport default (\n  <Slide key={uuid()}>\n    <Plugins.Data luminave={['']} />\n    {notes}\n\n    <A>\n      <LargeImage\n        src=\"media/tims_stack_vj_lj_2019.svg\"\n        alt=\"Tims Stack VJ LJ 2019\"></LargeImage>\n\n      {/*\n      <ImportantLink href=\"\"></ImportantLink>\n      */}\n\n      {/*\n      <Title>\n        <TextMarker>this.stage</TextMarker>\n      </Title>\n      */}\n\n      {/* \n        <Subtitle></Subtitle> \n      */}\n\n      {/*\n      <StyledList>\n        <Fragment order={2}>\n          <li></li>\n        </Fragment>\n        <Fragment order={3}>\n          <li></li>\n        </Fragment>\n        <Fragment order={4}>\n          <li></li>\n        </Fragment>\n        <Fragment order={5}>\n          <li class=\"no-border\"></li>\n        </Fragment>\n      </StyledList> \n      */}\n\n      {/* \n      <StyledListLarge>\n        <Fragment order={0}>\n          <li class=\"no-border\">\n            Title\n            <StyledList>\n              <Fragment order={2}>\n                <li class=\"light-border space-top\"></li>\n              </Fragment>\n              <Fragment order={3}>\n                <li class=\"light-border\">\n                </li>\n              </Fragment>\n              <Fragment order={4}>\n                <li class=\"light-border\"></li>\n              </Fragment>\n              <Fragment order={5}>\n                <li class=\"light-border\">\n                </li>\n              </Fragment>\n              <Fragment order={6}>\n                <li class=\"no-border\"></li>\n              </Fragment>\n            </StyledList>\n          </li>\n        </Fragment>\n      </StyledListLarge>\n       */}\n\n      {/* \n      <LargeImage \n          src=\"media/\"\n          alt=\"\"\n      />\n      */}\n\n      {/* \n        <FitImage src=\"media/\" alt=\"\" /> \n      */}\n\n      {/* \n      <Sequence order={1} steps={2} time={-1}>\n        {(index, time, timeline) => {\n          return <SuperVideo \n                //src=\"media/IMG_0659.m4v#t=93,170\"\n                // src=\"media/JSConfEU_18_Replay_Opener.mp4#t=623\"\n                src=\"media/JSConfEU_LiveJS_Performance_2018.mp4#t=2\"\n                isPlaying={index===0}\n          />\n        }}\n      </Sequence>\n      */}\n\n      {/*\n       <YouTube videoId=\"GiTkwz9AKhM\" start={93}>\n        {props => {\n          return (\n            <React.Fragment>\n              <Sequence order={1} steps={2}>\n                {(index, time, timeline) => {\n                  return <Live><Video {...props} isPlaying={index===0} /></Live>\n                }}\n              </Sequence>\n            </React.Fragment>\n          )\n        }}\n      </YouTube>\n      */}\n\n      {/*\n      <DmxChannels channels=\"6\" width=\"90%\" height=\"10em\">\n        <Channel background=\"\" label=\"Red\" value=\"0\" className=\"inactive\">\n        </Channel>\n\n        <Channel background=\"\" label=\"Green\" value=\"255\" className=\"active\">\n        </Channel>\n\n        <Channel background=\"\" label=\"Blue\" value=\"0\" className=\"inactive\">\n        </Channel>\n\n        <Channel background=\"\" label=\"UV\" value=\"0\" className=\"inactive\">\n        </Channel>\n\n        <Channel background=\"\" label=\"Dimmer\" value=\"255\" className=\"active\">\n        </Channel>\n\n        <Channel background=\"\" label=\"Strobe\" value=\"0\" className=\"inactive\">\n        </Channel>\n      </DmxChannels>\n    */}\n\n      {/* <StyledFooter>\n        <ImportantLink href=\"https://www.youtube.com/watch?v=RsqeSfyhzdw\">\n          youtube.com/watch?v=RsqeSfyhzdw\n        </ImportantLink>\n      </StyledFooter> */}\n\n      {/* <Code2 ranges={ranges} options={codeOptions}>\n            {code}\n          </Code2> */}\n    </A>\n\n    {/* <B>\n     <Title>Making of</Title>\n    </B> */}\n  </Slide>\n)\n","import React from 'react'\nimport styled, {css} from 'styled-components'\n\nexport const StyledList = styled.ul`\n  list-style: none;\n  text-align: left;\n  font-size: 3.5rem;\n  padding: 0;\n  margin: 0 0 0 0;\n  width: 100%;\n\n  > span {\n    display: block !important;\n  }\n\n  > span[style='--time:0;'] {\n  }\n\n  li {\n    position: relative;\n    line-height: 1.25em;\n    text-align: left;\n    display: inline-block;\n    margin: 0.25em 0 0.25em 0;\n    padding-bottom: 0.1em;\n    /* padding-right: 0.5em; */\n    width: 100%;\n    border-bottom: 1px solid var(--theme-primary-dark);\n\n    &:before {\n      content: '';\n      position: absolute;\n      left: -1em;\n      top: 0;\n    }\n\n    &.no-border {\n      border-bottom: none;\n    }\n\n    &.light-border {\n      border-bottom: 1px solid var(--theme-primary);\n    }\n\n    &.space-top {\n      margin-top: 0.5em;\n    }\n  }\n  &.right li {\n    margin: 0.25em 0 0.25em 1.5em;\n    padding: 0;\n    width: auto;\n  }\n\n  &.center {\n    height: auto;\n  }\n\n  &.center li {\n    text-align: center;\n    padding: 0;\n    margin: 0.25em 0;\n    width: auto;\n  }\n`\n\nexport const StyledListLarge = styled.ul`\n  list-style: none;\n  text-align: right;\n  font-size: 2em;\n  padding-right: 0.25em;\n  margin: 0 0 0 0;\n  width: 95%;\n\n  > span {\n    display: block !important;\n  }\n\n  > span[style='--time:0;'] {\n  }\n\n  li {\n    position: relative;\n    text-align: left;\n    display: inline-block;\n    margin: 0 1.5em 0.75em 0;\n    padding-bottom: 0.25em;\n    padding-right: 0.5em;\n    width: 90%;\n    border-bottom: 5px solid var(--theme-primary-dark);\n\n    &:before {\n      content: '';\n      position: absolute;\n      left: -1em;\n      top: 0;\n    }\n\n    &.no-border {\n      border-bottom: none;\n    }\n  }\n`\n\nexport const StyledOrderedListLarge = styled.ol`\n  list-style: decimal;\n  text-align: right;\n  font-size: 2em;\n  padding-right: 0.25em;\n  margin: 0 0 0 0;\n  width: 95%;\n\n  > span {\n    display: block !important;\n  }\n\n  > span[style='--time:0;'] {\n  }\n\n  li {\n    position: relative;\n    text-align: left;\n    margin: 0 1.5em 0.75em 0;\n    padding-bottom: 0.25em;\n    padding-right: 0.5em;\n    width: 90%;\n    border-bottom: 5px solid var(--theme-primary-dark);\n\n    &:before {\n      content: '';\n      position: absolute;\n      left: -1em;\n      top: 0;\n    }\n\n    &.no-border {\n      border-bottom: none;\n    }\n  }\n`\n"],"sourceRoot":""}